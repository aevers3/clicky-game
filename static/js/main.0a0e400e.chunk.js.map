{"version":3,"sources":["logo.svg","components/HomeLink/index.js","components/WelcomeMessage/index.js","components/GameOverMessage/index.js","components/CorrectMessage/index.js","components/Message/index.js","components/GameScore/index.js","components/TopScore/index.js","components/Scoreboard/index.js","components/Navbar/index.js","components/BannerHeader/index.js","components/BannerSubhead/index.js","components/Banner/index.js","components/ImageTile/index.js","components/Game/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HomeLink","props","console","log","react_default","a","createElement","text","WelcomeMessage","GameOverMessage","className","CorrectMessage","Message","lastGuessed","components_WelcomeMessage","components_CorrectMessage","components_GameOverMessage","GameScore","Fragment","score","TopScore","topScore","Scoreboard","components_GameScore","incrementScore","components_TopScore","Navbar","components_HomeLink","components_Message","components_Scoreboard","BannerHeader","BannerSubhead","Banner","components_BannerHeader","components_BannerSubhead","ImageTile","onClick","handleClick","src","image","Game","dupImages","images","slice","shuffledImages","i","index","Math","floor","random","length","randomImage","push","splice","map","components_ImageTile","key","id","isClicked","Footer","App","state","_this","setState","handleCorrect","handleIncorrect","chosen","filter","components_Navbar","this","components_Banner","components_Game","components_Footer","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a0e400e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\n\n\nfunction HomeLink(props) {\n    console.log(props);\n    return (\n        <h3>{props.text} </h3>\n    );\n}\n\nexport default HomeLink;","import React from 'react';\n\n\n\nfunction WelcomeMessage(props) {\n    return (\n            <h3>Click an image to begin!</h3>\n    );\n}\n\nexport default WelcomeMessage;","import React from 'react';\nimport './style.css'\n\nfunction GameOverMessage() {\n    return <h3 className='game-over'>Game Over</h3>;\n}\n\nexport default GameOverMessage;","import React from 'react';\nimport './style.css';\n\nfunction CorrectMessage() {\n    return <h3 className='correct-message'>You Guessed Correctly!</h3>;\n}\n\nexport default CorrectMessage;","import React from 'react';\nimport WelcomeMessage from '../WelcomeMessage';\nimport GameOverMessage from '../GameOverMessage';\nimport CorrectMessage from '../CorrectMessage';\n\nfunction Message(props) {\n    console.log('message', props)\n    const lastGuessed = props.lastGuessed;\n    if ( lastGuessed === 'reset' ) {\n        return <WelcomeMessage />\n    } else if ( lastGuessed === 'correct' ) {\n        return <CorrectMessage />\n    } else {\n        return <GameOverMessage />\n    }\n}\n\nexport default Message;","import React from 'react';\n\n\nfunction GameScore(props) {\n    return (\n        <>\n            <span className='game-score'>Score: {props.score} </span>\n        </>\n    )\n}\n\nexport default GameScore;","import React from 'react';\n\n\nfunction TopScore(props) {\n    return (\n        <>\n            <span>Top&nbsp;Score:&nbsp;{props.topScore} </span>\n        </>\n    )\n}\n\nexport default TopScore;","import React from 'react';\nimport GameScore from '../GameScore'\nimport TopScore from '../TopScore';\n\nfunction Scoreboard(props) {\n\n    return (\n        <div>\n            <h3>\n                    <GameScore\n                        incrementScore={props.incrementScore}\n                        score={props.score}\n                    />\n                    <span> | </span>\n                    <TopScore\n                        topScore={props.topScore}\n                    />\n            </h3>\n        </div>\n    )\n}\n\nexport default Scoreboard;","import React from 'react';\nimport HomeLink from '../HomeLink';\nimport Message from '../Message';\nimport Scoreboard from '../Scoreboard';\nimport './style.css';\n\nfunction Navbar(props) {\n    console.log('navp', props)\n    return (\n        <div className='navbar fixed-top navbar-custom p-0 d-flex justify-content-around'>\n            <div className='col-4 text-center'>\n                <HomeLink\n                    text='Clicky Game'\n                />\n            </div>\n            <div className='col-4 text-center'>\n                <Message\n                    lastGuessed={props.lastGuessed}\n                />\n            </div>\n            <div className='col-4 text-center'>\n                <Scoreboard\n                    incrementScore={props.incrementScore}\n                    score={props.score}\n                    topScore={props.topScore} />\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar;","import React from 'react';\n\nfunction BannerHeader(props) {\n    return (\n        <h1>{props.text} </h1>\n    );\n}\n\nexport default BannerHeader;","import React from 'react';\n\nfunction BannerSubhead(props) {\n    return (\n        <h3>{props.text} </h3>\n    );\n}\n\nexport default BannerSubhead;","import React from 'react';\nimport BannerHeader from '../BannerHeader';\nimport BannerSubhead from '../BannerSubhead';\nimport './style.css';\n\nfunction Banner() {\n    return (\n        <div className='banner d-flex justify-content-center'>\n            <div className='row align-self-center text-center p-4 mt-5 tint-box'>\n                <div className='col-12'>\n                    <BannerHeader\n                        text='Breakfast Memory Game!'\n                    />\n                </div>\n                <div className='col-12'>\n                    <BannerSubhead\n                        text=\"Click on an image to earn points, but don't click on any more than once!\"\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Banner;","import React from 'react';\nimport './style.css';\n\nfunction ImageTile(props) {\n    return (\n        <div className=\" text-center\">\n            <div className=\"image-tile\"\n                onClick={() => props.handleClick(props)} >\n                {/* <h1>{props.id} </h1> */}\n                {<img src={props.image} className='game-image'></img>}\n                \n            </div>\n        </div>\n    );\n}\n\nexport default ImageTile;","import React from 'react';\nimport ImageTile from '../ImageTile';\nimport images from '../../images';\nimport './style.css';\n\n\nfunction Game(props) {\n    console.log('game', props);\n    let dupImages = props.images.slice();\n    let shuffledImages = [];\n    for (let i=0; i < 12; i++) {\n        // Randomly select an item from dupImages, save index for splice later\n        let index = Math.floor(Math.random() * dupImages.length);\n        let randomImage = dupImages[index];\n        // Push random image to shuffledImages array\n        shuffledImages.push(randomImage);\n        // Remove random image from dupImages to avoid duplicates on page\n        dupImages.splice(index, 1);\n    }\n    console.log('shuffled', shuffledImages);\n    return (\n        <div className='gameWrapper container p-5'>\n            {/* Map over the images.json array and create image tiles. */}\n            {shuffledImages.map(image => (\n                <ImageTile\n                    handleClick={props.handleClick}\n                    key={image.id}\n                    id={image.id}\n                    image={image.image}\n                    isClicked={image.isClicked}\n                />\n            ))}\n        </div>\n    );\n}\n\nexport default Game;","import React from 'react';\nimport './style.css'\n\nfunction Footer() {\n    return (\n        <footer className='px-3 d-flex'>\n            <span className='d-flex'>\n                <i className=\"fab fa-react react-icon\"></i>\n            </span>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Banner from './components/Banner';\nimport Game from './components/Game';\nimport Footer from './components/Footer';\nimport images from './images';\n\n\n\nclass App extends React.Component {\n  state = {\n    images,\n    score: 0,\n    topScore: 0,\n    lastGuessed: 'reset'\n  }\n\n  // ==========================\n  // Shuffle function goes here \n  // ==========================\n\n  \n\n  // Runs each time a correct tile is clicked - adds to game score.\n  incrementScore = () => {\n    this.setState({ score: this.state.score + 1 })\n  };\n\n  handleCorrect = () => {\n    this.setState({ lastGuessed: 'correct' })\n  };\n\n  handleIncorrect = () => {\n    this.setState({ lastGuessed: 'incorrect' })\n  }\n\n  handleClick = props => {\n    console.log(props.isClicked)\n    // If the image has not been clicked, update the state to clicked. Otherwise, game over.\n    if (!props.isClicked) {\n      this.handleCorrect();\n      this.incrementScore();\n      this.setState((state) => {\n        let chosen = state.images.filter(image => image.id === props.id);\n        // Extract filtered object from returned array\n        chosen = chosen[0];\n        console.log('chosen', chosen);\n        chosen.isClicked = true;\n        return chosen;\n      });\n    } else {\n      this.handleIncorrect();\n      // If the game score beats topScore, update topScore\n      if (this.state.score > this.state.topScore) {\n        this.setState({ topScore: this.state.score })\n      }\n\n      // Reset all images to a state of {isClicked: false} for next game.\n      this.setState((state) => {\n        console.log('reset state', state.images)\n        const reset = state.images.map(image => image.isClicked = false);\n        return reset;\n      })\n\n      // Reset game score to zero.\n      this.setState({ score: 0 });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Navbar\n          incrementScore={this.incrementScore}\n          score={this.state.score}\n          topScore={this.state.topScore}\n          lastGuessed={this.state.lastGuessed} />\n        <Banner />\n        <Game\n          handleClick={this.handleClick}\n          images={this.state.images}\n          incrementScore={this.incrementScore}\n          score={this.state.score}\n          topScore={this.state.topScore} />\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}